spring:
  security:
    oauth2:
      client:
        registration:
          oidc-client:
            provider: spring-provider
            client-id: client-id
            client-secret: 123456
            authorization-grant-type: authorization_code
            #redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            redirect-uri: "{baseUrl}/authorized"
            #redirect-uri: "{baseUrl}/callback"
            # Aquí puedes optar por usar un endpoint personalizado si lo prefieres
            # En producción, es recomendable usar un endpoint específico para manejar el callback
            # como /callback o /oauth2/callback, en lugar de usar el predeterminado
            # es necesario que el endpoint de callback esté registrado en el proveedor OAuth2
            # es decir, en el Authorization Server al registrar el cliente
            scope: openid,profile,read,write
            # Puedes agregar más scopes según sea necesario
            #client-name: "Mi Servidor OIDC"
            # Nombre amigable para el cliente, se muestra en la pantalla de login del proveedor OAuth2
            # por ejemplo, iniciar sesión con "Mi Servidor OIDC"
        provider:
          spring-provider:
            authorization-uri: http://127.0.0.1:9000/oauth2/authorize
            token-uri: http://127.0.0.1:9000/oauth2/token
            user-info-uri: http://127.0.0.1:9000/userinfo
            jwk-set-uri: http://127.0.0.1:9000/oauth2/jwks
            issuer-uri: http://127.0.0.1:9000
      # Configuración para Resource Server
      resourceserver:
        jwt:
          jwk-set-uri: http://127.0.0.1:9000/oauth2/jwks
